# Load packages ----
library(here)
library(tidyverse)
library(mclm)
library(kableExtra)
#Load data
path_to_corpus <- here("anthrocorpus")
path_to_reference_corpus <-here("reference_corpus_random")
# List file names
anthro_fnames <- get_fnames(path_to_corpus)
reference_fnames <- get_fnames(path_to_reference_corpus)
print(anthro_fnames)
flist <-freqlist(anthro_fnames)
print(flist, n=20)
n_tokens(flist)
n_types(flist)
stop_list <- read_types("stop_list2_names.txt")
corpus_flist <-flist %>% drop_types(stop_list)
print(corpus_flist, n=50)
#| label: setup
### Preparations: Libraries, Paths, Fnames, Stop-List, Functions
# The necessary libraries
library(here)
library(tidyverse)
library(mclm)
library(kableExtra)
# Load Directory paths to target/reference corpus
path_to_corpus <- here("anthrocorpus")
path_to_reference_corpus <-here("reference_corpus_random")
# Load filenames
anthro_fnames <- get_fnames(path_to_corpus)
reference_fnames <- get_fnames(path_to_reference_corpus)
# Load individual book names from the target corpus
atwood_fname <- anthro_fnames %>% keep_re("target_atwood.txt")
itaranta_fname <- anthro_fnames %>% keep_re("target_itaranta.txt")
ma_fname <- anthro_fnames %>% keep_re("target_ma.txt")
mandel_fname <- anthro_fnames %>% keep_re("target_mandel.txt")
mccarthy_fname <- anthro_fnames %>% keep_re("target_mccarthy.txt")
vandermeer_fname <- anthro_fnames %>% keep_re("target_vandermeer.txt")
galchen_fname <- anthro_fnames %>% keep_re("target_galchen.txt")
# load stop list with the connecting words/names/cities to drop from analysis
stop_list2 <- read_types(here::here("stop_list2_names.txt"))
# Custom function, allows for a uniformal and quick frequency list creation
# Expected input: file name(fname)
create_frequency_list <- function(fname){
frequencies <- fname %>% freqlist() %>% drop_types(stop_list2)
}
# Custom function, allows for a uniformal and quick collocations creation, with
#   a built in dropping of tokens by the stop list.
# Expected input: file name(fname) + regular expression e.g. "(?xi) ^jimmy$"
create_surf_cooc <- function(fname,re_exp){
s_cooc <- fname %>% surf_cooc(re_exp, w_left = 3, w_right = 3, re_boundary=TRUE)
s_cooc$target_freqlist <- s_cooc$target_freqlist %>% drop_types(stop_list2)
s_cooc$ref_freqlist <- s_cooc$ref_freqlist %>% drop_types(stop_list2)
s_cooc
}
# Custom function, allows for the display of frequencies as tibble, original_rank discarded, arranged by rank.
# Expected input: frequency list(flist) + number (how many top rows to display)
#   e.g. display_flist_as_tibble(flist_atwood, 50)
display_flist_as_tibble <- function(flist,number) {
flist %>% as_tibble() %>% arrange((rank)) %>% select(rank, type, abs_freq, nrm_freq) %>% head(number) %>% kbl() %>% kable_paper(font_size = 14)
}
# create an fname/flist target / reference, also drop stop list, names, and highly book specific words from frequency lists
keyword_analysis_fnames_target <- anthro_fnames
keyword_analysis_fnames_reference <- reference_fnames
keyword_analysis_flist_target <- keyword_analysis_fnames_target %>% freqlist() %>% drop_types(stop_list2)
keyword_analysis_flist_reference <- keyword_analysis_fnames_reference %>% freqlist() %>% drop_types(stop_list2)
# assoc scores for the keywords analysis; Haldane is true by default, gives 0.5 to values instead of 0, so not to divide by zero. small_pos is a choose your own adventure type of thing.
score_keywords <- assoc_scores(keyword_analysis_flist_target, keyword_analysis_flist_reference, haldane = FALSE, small_pos = 0.001)
# create a list of scores, in which PMI >= 1.1 and G_signed >=4
top_scores_keywords <- score_keywords %>% filter(a > 3 & PMI >= 1.1 & G_signed >= 4)
# transform the top_scores_keywords into a tibble
top_scored_keywords_filtered <- top_scores_keywords %>% as_tibble()
# from the tibble, order by "a", select only type, top 100, as a tibble
top_scored_keywords_filtered %>% arrange(desc(a)) %>% select(type, a, PMI, G_signed) %>% head(20) %>% kbl() %>% kable_paper(font_size = 22)
#| label: tbl-keyword
#| tbl-cap: Top 100 Keywords of the Anthrocorpus filtered by frequency, PMI, and G-signed.
# create an fname/flist target / reference, also drop stop list, names, and highly book specific words from frequency lists
keyword_analysis_fnames_target <- anthro_fnames
keyword_analysis_fnames_reference <- reference_fnames
keyword_analysis_flist_target <- keyword_analysis_fnames_target %>% freqlist() %>% drop_types(stop_list2)
keyword_analysis_flist_reference <- keyword_analysis_fnames_reference %>% freqlist() %>% drop_types(stop_list2)
# assoc scores for the keywords analysis; Haldane is true by default, gives 0.5 to values instead of 0, so not to divide by zero. small_pos is a choose your own adventure type of thing.
score_keywords <- assoc_scores(keyword_analysis_flist_target, keyword_analysis_flist_reference, haldane = FALSE, small_pos = 0.001)
# create a list of scores, in which PMI >= 1.1 and G_signed >=4
top_scores_keywords <- score_keywords %>% filter(a > 3 & PMI >= 1.1 & G_signed >= 4)
# transform the top_scores_keywords into a tibble
top_scored_keywords_filtered <- top_scores_keywords %>% as_tibble()
# from the tibble, order by "a", select only type, top 100, as a tibble
top_scored_keywords_filtered %>% arrange(desc(a)) %>% select(type, a, PMI, G_signed) %>% head(20) %>% kbl() %>% kable_paper(font_size = 14)
#| label: setup
library(here)
library(tidyverse)
library(mclm)
library(kableExtra)
library(knitr)
path_to_corpus <- here("anthrocorpus")
path_to_reference_corpus <-here("reference_corpus_random")
anthro_fnames <- get_fnames(path_to_corpus)
reference_fnames <- get_fnames(path_to_reference_corpus)
flist <-freqlist(anthro_fnames)
n_tokens(flist)
n_types(flist)
#| label: fig-pandemic-conc
mandel_fname %>% conc("\\bpandemic\\b")%>% arrange(right) %>% print()
#| label: tbl-plastic-assocs
coocs_itaranta_water <- create_surf_cooc(itaranta_fname,"(?xi) ^plastic$")
assoc_scores_itaranta_water <- assoc_scores(coocs_itaranta_water)
assoc_scores_itaranta_water %>% arrange(desc(G_signed))%>% as_tibble() %>% select(type, a,PMI,G_signed, exp_a, dir) %>% kbl() %>% kable_paper(font_size = 14)
itaranta_fname %>% conc("\\bpast-world\\b") %>% arrange(right) %>% print()
#| label: setup
library(here)
library(tidyverse)
library(mclm)
library(kableExtra)
library(knitr)
path_to_corpus <- here("anthrocorpus")
path_to_reference_corpus <-here("reference_corpus_random")
anthro_fnames <- get_fnames(path_to_corpus)
reference_fnames <- get_fnames(path_to_reference_corpus)
flist <-freqlist(anthro_fnames)
n_tokens(flist)
n_types(flist)
#| label: tbl-water-coocs
#| tbl-cap: Words with the highest association scores with the word Water
coocs_mccarthy_water <- create_surf_cooc(mccarthy_fname,"(?xi) ^water$")
assoc_scores_mccarthy_water <- assoc_scores(coocs_mccarthy_water)
assoc_scores_mccarthy_water %>% arrange(desc(G_signed)) %>% as_tibble() %>% select(type, a, b, c, d, dir) %>% kbl() %>% kable_paper(font_size = 14)
